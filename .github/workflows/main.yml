name: Production Builds

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checking out branch
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2.0.10

      # This will decode the keystore from base 64 text representation that we have stored in secrets
      # and generates and keystore file and gets stored in /android-app path
      - name: Decode Keystore
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          BUILD_TOOLS_VERSION: "34"
        run: base64 --decode > app_keystore.jks

      - name: Build Release apk
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        run: ./gradlew assembleRelease --stacktrace

      - name: Get release file apk path
        id: releaseApk
        run: echo "apkfile=$(find app/build/outputs/apk/release/*.apk)" >> $GITHUB_OUTPUT

      - name: Zip Files
        uses: papeloto/action-zip@v1
        with:
          files: ${{ steps.releaseAab.outputs.aabfile }} ${{ steps.releaseApk.outputs.apkfile }}
          dest: ${{ steps.releaseApk.outputs.apkfile }}.zip

      #      - name: Sending release build to Slack
      #        uses: MeilCli/slack-upload-file@v3
      #        with:
      #          slack_token: ${{ secrets.SLACK_BOT_TOKEN }}
      #          file_path: ${{ steps.releaseApk.outputs.apkfile }}.zip
      #          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
      #          initial_comment: "Release build is now available."
      #
      #      - name: upload apk to Firebase App Distribution
      #        uses: wzieba/Firebase-Distribution-Github-Action@v1
      #        with:
      #          appId: ${{secrets.FIREBASE_APP_ID_RELEASE}}
      #          serviceCredentialsFileContent: ${{ secrets.SERVICE_CREDENTIALS_FILE_RELEASE }}
      #          groups: ${{ github.event.inputs.testers }}
      #          file: ${{ steps.releaseApk.outputs.apkfile }}

      - name: Upload Release Build to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          path: ${{ steps.releaseApk.outputs.apkfile }}