name: Build and Deploy APK to Firebase

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Deploy Signed APK
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

        # Step 2: Set up JDK
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      # Decode the keystore file
      - name: Decode and save keystore file
        run: echo "${{ secrets.KEYSTORE_FILE }}" | base64 --decode > app_keystore.jks

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Cache npm dependencies, including Firebase CLI
      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install Firebase CLI if not cached
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      # Build signed APK
      - name: Build signed APK
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        run: ./gradlew assembleRelease

          # Step 6: Upload APK
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.ref_name }}-apk
          path: app/build/outputs/apk/release

#          -Pandroid.injected.signing.store.file=${secrets.KEYSTORE_FILE } \
#          -Pandroid.injected.signing.store.password=${secrets.KEYSTORE_PASSWORD } \
#          -Pandroid.injected.signing.key.alias=${secrets.KEY_ALIAS } \
#          -Pandroid.injected.signing.key.password=${secrets.KEY_PASSWORD }

##      # Upload APK to Firebase App Distribution
##      - name: Upload APK to Firebase App Distribution
##        env:
##          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
##        run: |
##          firebase appdistribution:distribute app/build/outputs/apk/release/app-release.apk \
##            --app <your-firebase-app-id> \
##            --groups testers
#
#name: Build App
#
#on:
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Decode Keystore
#        id: decode_keystore
#        uses: timheuer/base64-to-file@v1
#        with:
#          fileName: 'app_keystore.jks'
#          encodedString: ${{ secrets.KEYSTORE_FILE }}
#      - uses: actions/checkout@v3
#      - name: set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: 17
#      - name: Make gradlew executable
#        run: chmod +x ./gradlew
#      - name: build prod
#        run: ./gradlew app:bundleRelease
#
#        env:
#          SIGNING_KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
#          SIGNING_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
#          SIGNING_STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
#      - name: Upload
#        uses: actions/upload-artifact@v3
#        with:
#          name: Build Artifacts
#          path: app/build/outputs/
