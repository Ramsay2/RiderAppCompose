name: Build Signed APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build Signed APK
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      # Step 3: Decode and save keystore
      - name: Decode and save keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 -d > keystore.jks

      # Step 4: Build the APK
      - name: Build APK
        run: ./gradlew assembleRelease

      # Step 5: Sign the APK
      - name: Sign APK
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          jarsigner -verbose -keystore keystore.jks \
            -storepass $KEYSTORE_PASSWORD -keypass $KEY_PASSWORD \
            app/build/outputs/apk/release/app-release-unsigned.apk $KEY_ALIAS

      # Step 6: Align the APK
      - name: Optimize APK
        run: |
          zipalign -v -p 4 app/build/outputs/apk/release/app-release-unsigned.apk \
            app/build/outputs/apk/release/app-release.apk

      # Step 7: Upload APK as artifact
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: signed-apk
          path: app/build/outputs/apk/release/app-release.apk
